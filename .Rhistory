m <- mean(x)
s <- sd(x)
t <- qt(1-(alpha/2), df = n-1)
ll <- m - t * (s/ sqrt(n))
ul <- m + t * (s/ sqrt(n))
ci <- c(1-alpha, ll, m, u)
names(ci) <- c("Confidence Level", "Lower limit", "Mean", "Upper limit")
return(ci)
}
smp <- c(520,498,481,512,515,542,520,518,527,526)
ci.t(smp)
# 예제 5-5, 모평균에 대한 95%신뢰구간(모분산을 모를 때)
ci.t <- function(x, alpha = 0.05) {
n <- length(smp)
m <- mean(x)
s <- sd(x)
t <- qt(1-(alpha/2), df = n-1)
ll <- m - t * (s/ sqrt(n))
ul <- m + t * (s/ sqrt(n))
ci <- c(1-alpha, ll, m, ul)
names(ci) <- c("Confidence Level", "Lower limit", "Mean", "Upper limit")
return(ci)
}
smp <- c(520,498,481,512,515,542,520,518,527,526)
ci.t(smp)
ci.t(smp, 0.1)
t
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
data3 <- mpg
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
data3 <- mpg
library(dplyr)
library(dplyr)
library(PairedData)
library(psych)
# 7장 여러 모집단의 평균 비교 검정
# 7-1. 모집단이 두개인 경우
# 정규성 테스트
# 기본 명령 shapiro.test()
library(dplyr)
data3 <- mpg
p3 <-data3 %>%
filter(class == 'midsize'| class = 'subcompact')
p3 <-data3 %>%
filter(class == midsize| class = subcompact)
p3 <-data3 %>%
filter(class == midsize | class = subcompact)
p3 <-data3 %>%
filter(class == 'midsize' | class = 'subcompact')
View(p4)
data3 <- mpg
p3 <-data3 %>%
filter(class == 'midsize' | class = 'subcompact')
View(p3)
p3 <-data3 %>%
filter(class == 'midsize' or class = 'subcompact')
p3 <-data3 %>%
filter(class == 'midsize' | class = 'subcompact')
p3 <-data3 %>%
filter(class == 'midsize' | class = 'subcompact')
View(data3)
p3 <-data3 %>%
select(hwy,class)%>%
filter(class == 'midsize' | class = 'subcompact')
p3 <-data3 %>%
select(hwy,class)
p3 <-mpg %>%
select(hwy,class)
p3 <-mpg %>%
select(hwy,class)
data3 <- mpg
p3 <-mpg %>%
select(hwy,class)
select(mpg,hwy,class)
library(dplyr)
select(mpg,hwy,class)
# 7장 여러 모집단의 평균 비교 검정
# 7-1. 모집단이 두개인 경우
# 정규성 테스트
# 기본 명령 shapiro.test()
library(dplyr)
# 7장 여러 모집단의 평균 비교 검정
# 7-1. 모집단이 두개인 경우
# 정규성 테스트
# 기본 명령 shapiro.test()
library(dplyr)
View(mpg)
p5<- mpg
p5 %>%
select(mpg, hwy, class) %>%
filter(class == 'midsize' | class = 'subcompact')
p5 %>%
select(hwy, class) %>%
filter(class == 'midsize' | class = 'subcompact')
p5 %>%
select(hwy, class)
p5<- mpg
p5 %>%
select(hwy, class)
p5 %>%
filter(class == 'midsize' | class = 'subcompact')
p5
p5 %>%
filter(class == 'midsize' | class = 'subcompact')
p5 %>%
filter(class == 'midsize')
filter(class%in% c('midsize','subcompact')
p5
p5 %>%
filter(class%in% c('midsize','subcompact'))
p5 %>%
filter(class%in% c('midsize','subcompact')) %>%
select(hwy, class)
p5 %>%
filter(class%in% c('midsize','subcompact')) %>%
select(p5,hwy, class)
p5 %>%
filter(class%in% c('midsize','subcompact')) %>%
var.test(data3$Price ~ data1$Origin)
p5 %>%
filter(class%in% c('midsize','subcompact'))
View(p5)
p6 <- p5 %>%
filter(class%in% c('midsize','subcompact'))
View(p6)
var.test(p6$hwy ~ p6$class)
t.test(p6$hwy ~ p6$class,mu=0, var.equal=FALSE )
t.test(p6$hwy ~ p6$class, mu=0, var.equal=FALSE)
# Chapter 09. 상관과 회귀
hf <- read.csv("http://www.math.uah.edu/stat/data/Galton.csv", header=T, stringsAsFactors = FALSE)
hf$Gender <- factor(hf$Gender, levels=c("M", "F"))
hf.son <- subset(hf, Gender=="M")
# Chapter 09. 상관과 회귀
hf <- read.csv("http://www.math.uah.edu/stat/data/Galton.csv", header=T, stringsAsFactors = FALSE)
hf
# Chapter 09. 상관과 회귀
hf <- read.csv("http://www.randomservices.org/random/data/Galton.txt", header=T, stringsAsFactors = FALSE)
str(hf)
str(hf.som)
str(hf)
# Chapter 09. 상관과 회귀
hf <- read.csv("http://www.randomservices.org/random/data/Galton.txt", header=T, stringsAsFactors = FALSE)
str(hf)
ViEW(hf)
ViEW(hf)
View(hf)
hf$Gender <- factor(hf$Gender, levels=c("M", "F"))
# Chapter 09. 상관과 회귀
hf <- read.csv("http://www.randomservices.org/random/data/Galton.txt", header=T, stringsAsFactors = FALSE)
hf$Gender <- factor(hf$Gender, levels=c("M", "F"))
hf.son <- subset(hf, Gender=="M")
# Chapter 09. 상관과 회귀
hf <- read.csv("http://www.randomservices.org/random/data/Galton.txt", header=T, stringsAsFactors = FALSE)
str(hf)
# Chapter 09. 상관과 회귀
hf <- read.table("http://www.randomservices.org/random/data/Galton.txt", header=T, stringsAsFactors = FALSE)
str(hf)
View(hf)
hf$Gender <- factor(hf$Gender, levels=c("M", "F"))
hf.son <- subset(hf, Gender=="M")
hf.son <- hf.son[c("Father", "Height")]
str(hf.som)
str(hf.son)
f.mean <- mean(hf.son$Father)
s.mean <- mean(hf.som$Height)
s.mean <- mean(hf.son$Height)
cov.num <- sum((hf.som$Father - f.mean) * (hf.som$Height - s.mean))
cov.num <- sum((hf.son$Father - f.mean) * (hf.son$Height - s.mean))
(cov.xy <- cov.num / (nrow(hf.som)-1))
(cov.xy <- cov.num / (nrow(hf.son)-1))
cov(hf.som$Father, hf.som$Height)
cov(hf.son$Father, hf.son$Height)
# R 함수를 이용한 상관계수
cor(hf.son$Father, hf.som$Height)
# R 함수를 이용한 상관계수
cor(hf.son$Father, hf.son$Height)
(x.ry <- cov.xy / (sd(hf.som$Father) * sd(hf.son$Height)))
(x.ry <- cov.xy / (sd(hf.son$Father) * sd(hf.son$Height)))
# R 함수를 이용한 상관계수
cor(hf.son$Father, hf.son$Height)
# 9-2. 회귀 분석
plot(hf$Father, hf$son)
# 9-2. 회귀 분석
plot(hf$Father, hf$Height)
# 9-2. 회귀 분석
plot(hf$Height, hf$Father)
hf$Gender <- factor(hf$Gender, levels=c("M", "F"))
hf.son <- subset(hf, Gender=="M")
hf.son <- hf.son[c("Father", "Height")]
mean.x <- mean(hf.son$Father)
mean.y <- mean(hf.son$Height)
b1 <- sxy / sxx
sxy <- sum((hf$Father - mean.x) * (hf.som$Height - mean.y))
sxy <- sum((hf$Father - mean.x) * (hf.son$Height - mean.y))
sxy <- sum((hf.son$Father - mean.x) * (hf.son$Height - mean.y))
sxx <- sum((hf.son$Father - mean.x)^2)
b1 <- sxy /sxx
b0 <- mean.y - b1 * mean.x
b0
# R을 이용한 회귀분석(lm())
lm(Height ~ Father, data=hf.son)
summary(out)
# R을 이용한 회귀분석(lm())
out <- lm(Height ~ Father, data=hf.son)
summary(out)
anova(out)
summary(out)
par(mfrow=c(2.2))
library(ggplot2)
par(mfrow=c(2.2))
par(mfrow=c(2.2))
plot(out)
par(mfrow=c(2.2))
par(mfrow=c(2,2))
plot(out)
# Polynomial Regeression
women
View(women)
# 신장에 따른 몸무게
plot(wheight~height, data=women)
# 신장에 따른 몸무게
plot(weight~height, data=women)
par(mfrow=c(1,1))
# 신장에 따른 몸무게
plot(weight~height, data=women)
fit <- lm(weight~height, data = women)
abline(fit, col='red', lwd=2)
fit
summary(fit)
cor.test(women$weight, women$height)
par(mfrow=c(2,2))
plot(fit)
par(mfrow=c(1,1))
fit2 <- lm(weight~height + I(height^2), data=women)
plot(weight~height, data=women)
line(women$height, fitted(fit2), col='green', lwd=2)
line(women$height, fited(fit2), col='green', lwd=2)
lines(women$height, fitted(fit2), col='green', lwd=2)
summary(fit2)
par(mfrow=c(2,2))
plot(fit2)
# Polynomial Regeression (3차항 추가)
fit3 <- lm(weight~height + I(height^2) + I(height^3), data=women)    # 1차 항으로 부족한 부분 = I(height^2) <- 2차항 적용
plot(weight~height, data=women)
lines(women$height, fitted(fit3), col='green', lwd=2)
summary(fit3)
par(mfrow=c(2,2))
plot(fit3)
# 다중 회귀 분석
state.x77
head(state.x77)
states <- as.data.frame(state.x77[,c("Murder","Population",
"Illiteracy","Income", "Frost")])
fit <- lm(Muder ~ Population+Illiteracy+Income+Frost, data=states)
fit <- lm(Murder ~ Population+Illiteracy+Income+Frost, data=states)
summary(fit)
par(mfrow = c(2,2))
plot(fit)
fit1 <- lm(Murder ~ . , data=states)
summary(fit1)
# 결과 값중 Income, Frost는 영향력이 없으므로(*이 한개도 없음) 빼고 적용
fit2 <- lm(Murder ~ Population, Illiteracy, data=states)
summary(fit12)
summary(fit2)
fit2
# 결과 값중 Income, Frost는 영향력이 없으므로(*이 한개도 없음) 빼고 적용
fit2 <- lm(Murder ~ Population + Illiteracy, data=states)
summary(fit2)
# AIC(Akaike Information Criterion)
AIC(fit1, fit2) # 값이 적을수록 좋은모델
# Backward stepwise regreesion, Forward stepwise regression
step(fit1, direction = 'backward')
#
install.packages('leaps')
libary(leaps)
library(leaps)
subsets <- regsubsets(Murder~. , data=states,
method = 'seqrep', nbest=4)
subsets <- regsubsets(Murder~. , data=states,
method = 'exhaustive', nbest=4)
summary(subsets)
plot(subsets)
par(mfrow=c(1,1))
plot(subsets)
data <- read.csv('http://stats.idre.ucla.edu/stat/data/binary.csv')
data
str(data)
data$rank <- as.factor(data$rank)
str(data)
train <- data[1:200,]
test <- data(201:400,)
test <- data[201:400,]
test <- data[201:400,]
train <- data[1:200,]
test <- data[201:400,]
model <- glm(admit ~ gre + gpa + rank, data =data, family = 'binomial')
summary(model)
model2 <- glm(admit ~ gpa + rank, data =data, family = 'binomial')
summary(model2)
AIC(model, model2)
knitr::opts_chunk$set(echo = TRUE)
fa <- c(150,160,170,180,190)
son <- c(176,179,182,181,185)
View(hf.son)
data.frame(fa,son)
ki <- data.frame(fa,son)
View(ki)
k1 <- lm(son ~ fa, data = ki)
anova(k1)
summary(out)
plot(k1)
summary(out)
# 아버지의 키가 165cm 일때 아들의 키는 얼마 인가?
(165 * 0.448) + 38.25891
# 아버지의 키가 165cm 일때 아들의 키는 얼마 인
38.259 + 0.448(165)
# 아버지의 키가 165cm 일때 아들의 키는 얼마 인
38.259 + 0.448*(165)
# 아버지의 키가 165cm 일때 아들의 키는 얼마 인
38.259 + (0.448*(165))
summary(out)
summary(ㅏ1)
summary(k1)
# 아버지의 키가 165cm 일때 아들의 키는 얼마 인
146.6 + (0.2*(165))
mc <- c(100,200,300,400,500)
mc <- c(100,200,300,400,500)
cu <- c(30,70,85,140,197)
ca <- data.frame(cu,mc)
ca
View(ca)
c1 <- lm(cu ~ mc, data = ca)
anova(c1)
summary(c1)
summary(k1)
summary(c1)
-16.8 + 250*(0.404)
#
cat(-16.8 + 250*(0.404))
#
cat(-16.8 + 250*(0.404),"만원")
# 월 소득이 250만원일때 신용카드 샤용량을 예측하시오
cat(-16.8 + 250*(0.404),"만원")
# 아버지의 키가 165cm 일때 아들의 키는 얼마 인가?
cat(146.6 + (0.2*(165),"cm")
# 아버지의 키가 165cm 일때 아들의 키는 얼마 인가?
cat(146.6 + (0.2*(165),"cm")
# 아버지의 키가 165cm 일때 아들의 키는 얼마 인가?
cat(146.6 + (0.2*(165),"cm"))
# 아버지의 키가 165cm 일때 아들의 키는 얼마 인가?
cat(146.6 + (0.2*(165)),"cm")
# 아버지의 키가 165cm 일때 아들의 키는 얼마 인가?
cat('아들의 키",146.6 + (0.2*(165)),"cm")
# 아버지의 키가 165cm 일때 아들의 키는 얼마 인가?
cat('아들의 키",146.6 + (0.2*(165)),"cm")
# 아버지의 키가 165cm 일때 아들의 키는 얼마 인가?
cat('아들의키",146.6 + (0.2*(165)),"cm")
# 아버지의 키가 165cm 일때 아들의 키는 얼마 인가?
cat('아들의키",146.6 + (0.2*(165)),"cm")
# 아버지의 키가 165cm 일때 아들의 키는 얼마 인가?
cat(146.6 + (0.2*(165)),"cm")
View(mtcars)
data <- mtcars
hp1 <- lm(data$hp ~ data$disp, data=data)
anova(data)
anova(hp1)
summary(hp1)
library(MASS)
Boston
View(Boston)
data1 <- Boston
View(data1)
data3 <- read.csv('http://stats.idre.ucla.edu/stat/data/binary.csv')
View(data3)
View(data3)
medv1 <- lm(MEDV ~ . , data=data1)     # . <- 나머지 변수 전부다 적용
View(data1)
medv1 <- lm(medv ~ . , data=data1)     # . <- 나머지 변수 전부다 적용
summary(medv1)
AIC(medv1)
summary(medv1)
medv <- lm(medv ~ crim + zn + chas + nox + rm + dis +rad + tax + ptratio + black + lstat, data = data1)
medv2 <- lm(medv ~ crim + zn + chas + nox + rm + dis +rad + tax + ptratio + black + lstat, data = data1)
summary(dedv2)
summary(medv2)
AIC(medv2)
AIC(medv1)
AIC(medv2)
# medv2 결과 값중 crim, chas 는 관계성이 다른 항목보다 (**개) 부족하므로 제외 후 다중 회귀분석
medv3 <- lm(medv ~ zn + nox + rm + dis +rad + tax + ptratio + black + lstat, data = data1)
summary(medv3)
AIC(medv3)
AIC(medv2)
AIC(medv3)
summary(medv3)
summary(medv2)
summary(medv1)
medv1 <- lm(medv ~ . , data=data1)     # . <- 나머지 변수 전부다 적용
summary(medv1)
AIC(medv1)
AIC(medv1, medv2, medv3)
AIC(c(medv1, medv2, medv3))
AIC(medv1, medv2, medv3)
AIC(medv2)
step(medv1, direction = 'backward')
---
---
```{r setup, include=FALSE}
```
## 회귀분석
1.부모의 키가 클수록 자식의 키도 상대적으로 크다고 하는데, 아버지의 키와 아들의 키를 조사하였더니 아래와 같이 나왔다고 한다. 이 자료를 바탕으로 해서 회귀식을 구하고 아버지의 키가 165cm일 때 아들의 키는 얼마인지 예측하시오. 	아버지의 키(x):	150  160  170  180  190	아들의 키(y):	176  179  182  181  185
```{r}
fa <- c(150,160,170,180,190)
son <- c(176,179,182,181,185)
ki <- data.frame(fa,son)
k1 <- lm(son ~ fa, data = ki)
anova(k1)
summary(k1)
# 아버지의 키가 165cm 일때 아들의 키는 얼마 인가?
cat(146.6 + (0.2*(165)),"cm")
```
2.소득이 높을수록 신용카드 사용량이 많아진다고 하는데, 월 소득 대비 신용카드 사용량을 조사하였더니 아래와 같이 나왔다고 한다. 이 자료를 바탕으로 해서 회귀식을 구하고, 월 소득이 250만원일 때 신용카드 사용량을 예측하시오. (단위: 만원)
월 소득(x):	100  200  300  400  500
카드 사용량(y):	 30    70    85  140  197
```{r}
mc <- c(100,200,300,400,500)
cu <- c(30,70,85,140,197)
ca <- data.frame(cu,mc)
View(ca)
c1 <- lm(cu ~ mc, data = ca)
anova(c1)
summary(c1)
# 월 소득이 250만원일때 신용카드 샤용량을 예측하시오
cat(-16.8 + 250*(0.404),"만원")
```
3. mtcars 데이터셋에서 배기량(disp)에 따른 마력(hp)의 회귀식을 구하시오.
```{r}
View(mtcars)
data <- mtcars
hp1 <- lm(data$hp ~ data$disp, data=data)
anova(hp1)
summary(hp1)
# y = 45.73+0.43(x)
```
4. MASS 패키지를 설치하고, 이 패키지 안에 있는 Boston 데이터셋을 이용하여 Boston 인근의 집값을 결정하는 다중회귀 모델을 만드시오.
```{r}
library(MASS)
data1 <- Boston
View(data1)
medv1 <- lm(medv ~ . , data=data1)     # . <- 나머지 변수 전부다 적용
summary(medv1)
AIC(medv1)
# 결과 값중 indus, age는 관계성이 부족하므로 제외 후 다중 회귀분석
medv2 <- lm(medv ~ crim + zn + chas + nox + rm + dis +rad + tax + ptratio + black + lstat, data = data1)
summary(medv2)
AIC(medv2)
# medv2 결과 값중 crim, chas 는 관계성이 다른 항목보다 (**개) 부족하므로 제외 후 다중 회귀분석
medv3 <- lm(medv ~ zn + nox + rm + dis +rad + tax + ptratio + black + lstat, data = data1)
summary(medv3)
AIC(medv3)
AIC(medv1, medv2, medv3)
# AIC분석 후 확인 결과 Boston의 집값을 다중 회귀모델은 mdev2(indus, age 제외)이 가장 적절한 것으로 보인다.
```
```{r}
# stepwise (backward)
step(medv1, direction = 'backward')
# stepwise(backward) 실행 시  medv ~ crim + zn + chas + nox + rm + dis + rad + tax + ptratio + black + lstat 의 회귀모델 적합
```
fa <- c(150,160,170,180,190)
son <- c(176,179,182,181,185)
ki <- data.frame(fa,son)
k1 <- lm(son ~ fa, data = ki)
anova(k1)
summary(k1)
# 아버지의 키가 165cm 일때 아들의 키는 얼마 인가?
cat(146.6 + (0.2*(165)),"cm")
mc <- c(100,200,300,400,500)
cu <- c(30,70,85,140,197)
ca <- data.frame(cu,mc)
c1 <- lm(cu ~ mc, data = ca)
anova(c1)
summary(c1)
View(mtcars)
data <- mtcars
hp1 <- lm(data$hp ~ data$disp, data=data)
anova(hp1)
summary(hp1)
data1 <- Boston
data1 <- Boston
medv1 <- lm(medv ~ . , data=data1)     # . <- 나머지 변수 전부다 적용
summary(medv1)
AIC(medv1)
# 결과 값중 indus, age는 관계성이 부족하므로 제외 후 다중 회귀분석
medv2 <- lm(medv ~ crim + zn + chas + nox + rm + dis +rad + tax + ptratio + black + lstat, data = data1)
summary(medv2)
AIC(medv2)
# medv2 결과 값중 crim, chas 는 관계성이 다른 항목보다 (**개) 부족하므로 제외 후 다중 회귀분석
medv3 <- lm(medv ~ zn + nox + rm + dis +rad + tax + ptratio + black + lstat, data = data1)
summary(medv3)
AIC(medv3)
AIC(medv1, medv2, medv3)
step(medv1, direction = 'backward')
data1 <- Boston
data1 <- Boston
knitr::opts_chunk$set(include = FALSE)
library(MASS)
knitr::opts_chunk$set(echo = TRUE)
library(MASS)
knitr::opts_chunk$set(echo = TRUE)
library(MASS)
