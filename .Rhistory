lines(m4, ch1, lty=1)
ch1 <- dchisq(m4, df=1)
m4 <- rep(NA, 1000)      # 결측치 생성
m16 <- rep(NA, 1000)
m32 <- rep(NA, 1000)
m256 <- rep(NA, 1000)
ch1 <- dchisq(m4, df=1)
set.seed(9)
for(i in 1:1000) {
m4[i] <- mean(rnorm(4))     # m4[i]에 4개의 표본을 추출해 그 평균을 대입, 1000번
m16[i] <- mean(rnorm(16))
m32[i] <- mean(rnorm(32))
m256[i] <- mean(rnorm(256))
}
c(mean(m4), sd(m4))
hist(m4, xlim=c(-1.5,1.5), main = "", xlab = 'x', ylab = '',
col = 'cyan', border = 'blue')
plot(m4, type="n", xlim=c(0, 10), ylim=c(0, 10), main="", xlab="x", ylab="")
lines(m4, ch1, lty=1)
options(digits = 4)
c(mean(m4), sd(m4))
c(mean(m16), sd(m16))
c(mean(m32), sd(m32))
c(mean(m256), sd(m256))
df <- c(1, 3, 5, 10) ;df[1]
x <- seq(0, 20, by=0.01) ; x
chi2.1 <- dchisq(x, df[1])
chi2.3 <- dchisq(x, df[2])
chi2.5 <- dchisq(x, df[3])
chi2.10 <- dchisq(x, df[4])
plot(x, type="n", xlim=c(0, 20), ylim=c(0, 0.3), main="", xlab="x", ylab="", axes=F)
axis(1)
axis(2)
lines(x, chi2.1, lty=1)
plot(x, type="n", xlim=c(0, 20), ylim=c(0, 0.3), main="", xlab="x", ylab="", axes=F)
plot(m4, type="n", xlim=c(0, 20), ylim=c(0, 0.3), main="", xlab="x", ylab="", axes=F)
axis(1)
plot(m4, type="n", xlim=c(0, 20), ylim=c(0, 0.3), main="", xlab="x", ylab="")
lines(m4, ch1, lty=1)
ch1 <- dchisq(m4, df=5)
lines(m4, ch1, lty=1)
ploy(m4,ch1)
plot(m4,ch1)
plot(m4,ch1, lty=1)
c(mean(m4), sd(m4))
hist(m4, xlim=c(-1.5,1.5), main = "", xlab = 'x', ylab = '',
col = 'cyan', border = 'blue')
plot(m4, type="n", xlim=c(0, 20), ylim=c(0, 0.3), main="", xlab="x", ylab="")
x1 <- seq(min(m4), max(m4), length = 1000)
y1 <- dnorm(x = x1, mean= 170, sd = (6/sqrt(4)))
lines(x1, y1, lty = 2, lwd = 2, col = 'blue')
ch1 <- dchisq(m4, df=1)
m4 <- rep(NA, 1000)      # 결측치 생성
m16 <- rep(NA, 1000)
m32 <- rep(NA, 1000)
m256 <- rep(NA, 1000)
)
m4 <- rep(NA, 1000)      # 결측치 생성
m16 <- rep(NA, 1000)
m32 <- rep(NA, 1000)
m256 <- rep(NA, 1000)
set.seed(9)
for(i in 1:1000) {
m4[i] <- mean(rnorm(4))     # m4[i]에 4개의 표본을 추출해 그 평균을 대입, 1000번
m16[i] <- mean(rnorm(16))
m32[i] <- mean(rnorm(32))
m256[i] <- mean(rnorm(256))
}
ch1 <- dchisq(m4, df=1)
lines(m4, ch1, type = 'l', col = 'blue')
for(i in 1:1000) {
m4[i] <- rnorm(4)     # m4[i]에 4개의 표본을 추출해 그 평균을 대입, 1000번
# m16[i] <- mean(rnorm(16))
# m32[i] <- mean(rnorm(32))
# m256[i] <- mean(rnorm(256))
}
m4[i] <- mean(rnorm(4))     # m4[i]에 4개의 표본을 추출해 그 평균을 대입, 1000번
for(i in 1:1000) {
m4[i] <- mean(rnorm(4))     # m4[i]에 4개의 표본을 추출해 그 평균을 대입, 1000번
# m16[i] <- mean(rnorm(16))
# m32[i] <- mean(rnorm(32))
# m256[i] <- mean(rnorm(256))
}
ch1 <- dchisq(m4, df=1)
lines(m4, ch1, type = 'l', col = 'blue')
m4   <- rep(NA, 1000)  ;m4    # 결측치 생성
for(i in 1:1000) {
m4[i] <- mean(rnorm(4))     # m4[i]에 4개의 표본을 추출해 그 평균을 대입, 1000번
m16[i] <- mean(rnorm(16))
# m32[i] <- mean(rnorm(32))
# m256[i] <- mean(rnorm(256))
}
ch1 <- dchisq(m16, df=1)
lines(m16, ch1, type = 'l', col = 'blue')
plot(m4, ch1, type = 1, main = 'test')
plot(m4, ch1, type = 1, main = 'test', ylab='y')
plot(m4,  type = 1, main = 'test', ylab='y')
plot(m4, type = 1, main = 'test', ylab='y')
lines(m16, ch1, type = 'l', col = 'blue')
lines(m16, ch1, type = 'l', col = 'blue')
lines(m16, ch1, type = 'l', col = 'blue')
lines(m16, ch1, type = 'l', col = 'blue')
lines(m16, ch1, type = 'l', col = 'blue')
lines(m16, ch1, type = 'l', col = 'blue')
lines(m16, ch1, type = 'l', col = 'blue')
lines(m16, ch1, type = 'l', col = 'blue')
lines(m16, ch1, type = 'l', col = 'blue')
lines(m16, ch1, type = 'l', col = 'blue')
lines(m16, ch1, type = 'l', col = 'blue')
lines(m16, ch1, type = 'l', col = 'blue')
lines(m16, ch1, type = 'l', col = 'blue')
lines(m16, ch1, type = 'l', col = 'blue')
m4   <- rep(NA, 1000)     # 결측치 생성
m16  <- rep(NA, 1000)
m32  <- rep(NA, 1000)
m256 <- rep(NA, 1000)
set.seed(9)
for(i in 1:1000) {
m4[i] <- mean(rnorm(4))     # m4[i]에 4개의 표본을 추출해 그 평균을 대입, 1000번
m16[i] <- mean(rnorm(16))
# m32[i] <- mean(rnorm(32))
# m256[i] <- mean(rnorm(256))
}
ch1 <- dchisq(m16, 1)
plot(x, y, type = 'l', main = 'test', ylab = 'y', ylim = c(0, 0.5))
lines(m16, ch1, type = 'l', col = 'blue')
m4   <- rep(NA, 1000)     # 결측치 생성
m16  <- rep(NA, 1000)
m32  <- rep(NA, 1000)
m256 <- rep(NA, 1000)
set.seed(9)
for(i in 1:1000) {
m4[i] <- mean(rnorm(4))     # m4[i]에 4개의 표본을 추출해 그 평균을 대입, 1000번
m16[i] <- mean(rnorm(16))
# m32[i] <- mean(rnorm(32))
# m256[i] <- mean(rnorm(256))
}
for(i in 1:1000) {
m4[i] <- mean(rnorm(4))     # m4[i]에 4개의 표본을 추출해 그 평균을 대입, 1000번
m16[i] <- mean(rnorm(16))
m32[i] <- mean(rnorm(32))
m256[i] <- mean(rnorm(256))
}
m10 <- rep(NA, 1000)      # 결측치 생성
m40 <- rep(NA, 1000)
set.seed(9)
for(i in 1:1000) {
m10[i] <- mean(rnorm(10))     # m10[i]에 10개의 랜덤 숫자의 평균을 대입 (rnorm(10)= 표준정규분포)
m40[i] <- mean(rnorm(40))     # m40[i]에 10개의 랜덤 숫자의 평균을 대입 (rnorm(40)= 표준정규분포)
}
options(digits = 4)
c(mean(m10), sd(m10))
c(mean(m40), sd(m40))
hist(m10, xlim=c(-1.5,1.5), main = "", xlab = 'x', ylab = '',
col = 'cyan', border = 'blue')
ch1
str(ch1)
m4
for(i in 1:1000) {
m4[i] <- mean(dnorm(4))
m16[i] <- mean(dnorm(16))
# m32[i] <- mean(rnorm(32))
# m256[i] <- mean(rnorm(256))
}
m4
m4[i] <- mean(rnorm(4))
m16[i] <- mean(rnorm(16))
for(i in 1:1000) {
m4[i] <- mean(rnorm(4))
m16[i] <- mean(rnorm(16))
# m32[i] <- mean(rnorm(32))
# m256[i] <- mean(rnorm(256))
}
m4
# 예제 4-1. 표본 평균 x의 분포
m10 <- rep(NA, 1000)      # 결측치 생성
m40 <- rep(NA, 1000)
set.seed(9)
for(i in 1:1000) {
m10[i] <- mean(rnorm(10))     # m10[i]에 10개의 랜덤 숫자의 평균을 대입 (rnorm(10)= 표준정규분포)
m40[i] <- mean(rnorm(40))     # m40[i]에 10개의 랜덤 숫자의 평균을 대입 (rnorm(40)= 표준정규분포)
}
m10
c(mean(m10), sd(m10))
c(mean(m40), sd(m40))
ch1 <- dchisq(m16, 1)
m16
set.seed(9)
m4[i] <- mean(rnorm(4))
m16[i] <- mean(rnorm(16))
m16
ch1 <- dchisq(m16, 1)
str(ch1)
plot(x, y, type = 'l', main = 'test', ylab = 'y', ylim = c(0, 0.5))
plot(x, ch1, type = 'l', main = 'test', ylab = 'y', ylim = c(0, 0.5))
plot(x, type = 'l', main = 'test', ylab = 'y', ylim = c(0, 0.5))
lines(m16, ch1, type = 'l', col = 'blue')
lines(1:1000, ch1, type = 'l', col = 'blue')
ch1 <- dchisq(m16, 15)
plot(x, type = 'l', main = 'test', ylab = 'y', ylim = c(0, 0.5))
plot(x, main = 'test', ylab = 'y', ylim = c(0, 0.5))
plot(x, main = 'test', ylab = 'y', ylim = c(0, 0.5))
plot(x, main = 'test', ylab = 'y', xlim = c(0,1)ylim = c(0, 0.5))
plot(x, main = 'test', ylab = 'y', xlim = c(0,1),ylim = c(0, 0.5))
plot(x, main = 'test', ylab = 'y', xlim = c(-1,1),ylim = c(0, 0.5))
lines(m16, ch1, type = 'l', col = 'blue')
y1 <- dchisq(m16, 15)
str(ch1)
plot(x, main = 'test', ylab = 'y', xlim = c(-1,1),ylim = c(0, 0.5))
lines(m16, y1, type = 'l', col = 'blue')
y1 <- dchisq(m16, 15)
str(ch1)
plot(x, main = 'test', ylab = 'y', xlim = c(-1,1),ylim = c(0, 0.5))
lines(m16, y1, col = 'blue')
y1)
y1 <- dchisq(m16, 15)
y1
y1 <- dchisq(m16, 1)
y1
plot(x, main = 'test', ylab = 'y', xlim = c(0,5), ylim = c(0, 5))
lines(m16, y1, col = 'blue')
m4
y1 <- dchisq(m4, 1)
y1
plot(m4, main = 'test', ylab = 'y', xlim = c(0,5), ylim = c(0, 5))
x <- c(1:1000)
plot(x, main = 'test', ylab = 'y', xlim = c(0,5), ylim = c(0, 5))
lines(m16, y1, col = 'blue')
lines(x, y1, col = 'blue')
plot(x, main = 'test', ylab = 'y', xlim = c(0,5), ylim = c(0, 5))
lines(x, y1, col = 'blue')
plot(x, type="n", xlim=c(0, 20), ylim=c(0, 0.3), main="", xlab="x", ylab="", axes=F)
axis(1)
axis(2)
lines(x, chi2.1, lty=1)
x <- c(1,1000,by=1)
m4
y1
plot(x, main = 'test', ylab = 'y', xlim = c(0,5), ylim = c(0, 5))
lines(x, y1, col = 'blue')
set.seed(308)
m4   <- rep(NA, 1000)     # 결측치 생성
m16  <- rep(NA, 1000)
m32  <- rep(NA, 1000)
m256 <- rep(NA, 1000)
for(i in 1:1000) {
m4[i] <- mean(rnorm(4))
m16[i] <- mean(rnorm(16))
# m32[i] <- mean(rnorm(32))
# m256[i] <- mean(rnorm(256))
}
x <- c(1,1000,by=1)
m4
y1 <- dchisq(m4, 1)
y1
plot(x, main = 'test', ylab = 'y', xlim = c(0,5), ylim = c(0, 5))
lines(x, y1, col = 'blue')
et.seed(123)
df <- 5
x <- seq(0,100,by=0.001)
n <- 1000
chi.5.mean <- rep(NA,n)
chi.20.mean <- rep(NA,n)
chi.40.mean <- rep(NA,n)
chi.160.mean <- rep(NA,n)
for (i in 1:n) {
chi.5.mean[i] <- mean(rchisq(5,df))
chi.20.mean[i] <- mean(rchisq(20,df))
chi.40.mean[i] <- mean(rchisq(40,df))
chi.160.mean[i] <- mean(rchisq(160,df))
}
options(digits=4)
c(mean(chi.5.mean),sd(chi.5.mean))
c(mean(chi.20.mean),sd(chi.20.mean))
c(mean(chi.40.mean),sd(chi.40.mean))
c(mean(chi.160.mean),sd(chi.160.mean))
par(mfrow=c(2,2))
hist(chi.5.mean,prob=T,main="Chi-square with n=5",
col="yellow",border="red")
x1 <- seq(min(chi.5.mean),max(chi.5.mean),length=1000)
y1 <- dnorm(x1,mean=5,sd=sqrt(10)/sqrt(5))
lines(x1,y1,lty=2,lwd=2,col="blue")
hist(chi.20.mean,prob=T,main="Chi-square with n=20",
col="yellow",border="red")
x2 <- seq(min(chi.20.mean),max(chi.20.mean),length=1000)
y2 <- dnorm(x2,mean=5,sd=sqrt(10)/sqrt(20))
lines(x2,y2,lty=2,lwd=2,col="blue")
hist(chi.40.mean,prob=T,main="Chi-square with n=40",
col="yellow",border="red")
x3 <- seq(min(chi.40.mean),max(chi.40.mean),length=1000)
y3 <- dnorm(x3,mean=5,sd=sqrt(10)/sqrt(40))
lines(x3,y3,lty=2,lwd=2,col="blue")
hist(chi.160.mean,prob=T,main="Chi-square with n=160",
col="yellow",border="red")
x4 <- seq(min(chi.160.mean),max(chi.160.mean),length=1000)
y4 <- dnorm(x4,mean=5,sd=sqrt(10)/sqrt(160))
lines(x4,y4,lty=2,lwd=2,col="blue")
```
set.seed(123)
df <- 10
x <- seq(-100,100,by=0.001)
n <- 1000
t.5.mean <- rep(NA,n)
t.20.mean <- rep(NA,n)
t.40.mean <- rep(NA,n)
t.160.mean <- rep(NA,n)
for (i in 1:n) {
t.5.mean[i] <- mean(rt(5,df))
t.20.mean[i] <- mean(rt(20,df))
t.40.mean[i] <- mean(rt(40,df))
t.160.mean[i] <- mean(rt(160,df))
}
options(digits=4)
c(mean(t.5.mean),sd(t.5.mean))
c(mean(t.20.mean),sd(t.20.mean))
c(mean(t.40.mean),sd(t.40.mean))
c(mean(t.160.mean),sd(t.160.mean))
par(mfrow=c(2,2))
hist(t.5.mean,prob=T,main="T with n=5",
col="green",border="red")
x1 <- seq(min(t.5.mean),max(t.5.mean),length=1000)
y1 <- dnorm(x1,mean=0,sd=sqrt(10/8)/sqrt(5))
lines(x1,y1,lty=2,lwd=2,col="blue")
hist(t.20.mean,prob=T,main="T with n=20",
col="green",border="red")
x2 <- seq(min(t.20.mean),max(t.20.mean),length=1000)
y2 <- dnorm(x2,mean=0,sd=sqrt(10/8)/sqrt(20))
lines(x2,y2,lty=2,lwd=2,col="blue")
hist(t.40.mean,prob=T,main="T with n=40",
col="green",border="red")
x3 <- seq(min(t.40.mean),max(t.40.mean),length=1000)
y3 <- dnorm(x3,mean=0,sd=sqrt(10/8)/sqrt(40))
lines(x3,y3,lty=2,lwd=2,col="blue")
hist(t.160.mean,prob=T,main="T with n=160",
col="green",border="red")
x4 <- seq(min(t.160.mean),max(t.160.mean),length=1000)
y4 <- dnorm(x4,mean=0,sd=sqrt(10/8)/sqrt(160))
lines(x4,y4,lty=2,lwd=2,col="blue")
set.seed(9)
x <- seq(0,500,by=0.001)
n <- 1000
m4   <- rep(NA, 1000)     # 결측치 생성
m16  <- rep(NA, 1000)
m32  <- rep(NA, 1000)
m256 <- rep(NA, 1000)
m4[i]   <- mean(chisq(4,1))
m4[i]   <- mean(rchisq(4,1))
for(i in 1:1000) {
m4[i]   <- mean(rchisq(4,1))
m16[i]  <- mean(rchisq(16,1))
m32[i]  <- mean(rchisq(32,1))
m256[i] <- mean(rchisq(256,1))
}
c(mean(chi.5.mean),sd(chi.5.mean))
c(mean(m4). sd(m4)
c(mean(m4). sd(m4))
c(mean(m4), sd(m4))
c(mean(m16), sd(m16))
c(mean(m32), sd(m32))
c(mean(m256), sd(m256))
hist(chi.5.mean,prob=T,main="카이제곱분포 df=1, n= 4",
col="yellow",border="red")
hist(chi.5.mean,prob=T,main="카이제곱분포 df=1, n= 4",
col="cyan",border="red")
hist(chi.5.mean,prob=T,main="카이제곱분포 df=1, n= 4",
col="cyan")
x1 <- seq(min(m4),max(m4),length=1000)
c(mean(chi.5.mean),sd(chi.5.mean))
c(mean(chi.5.mean),sd(chi.5.mean))
c(mean(m4), sd(m4))
c(mean(m4), sd(m4))
c(mean(m16), sd(m16))
c(mean(m32), sd(m32))
c(mean(chi.5.mean),sd(chi.5.mean))
c(mean(chi.20.mean),sd(chi.20.mean))
c(mean(chi.40.mean),sd(chi.40.mean))
c(mean(m4), sd(m4))
c(mean(m16), sd(m16))
c(mean(m32), sd(m32))
c(mean(chi.5.mean),sd(chi.5.mean))
var(chi.5.mean)
sqrt(chi.5.mean)
var(chi.5.mean)
sqrt(2.031)
var(x)
var(1000)
c(mean(chi.5.mean),sd(chi.5.mean))
c(mean(chi.20.mean),sd(chi.20.mean))
c(mean(chi.40.mean),sd(chi.40.mean))
c(mean(chi.160.mean),sd(chi.160.mean))
set.seed(9)
n <- 1000
r.1.mean = rep(NA, n)
r.2.mean = rep(NA, n)
for (i in 1:n) {
r.1.mean[i] = mean( rnorm(4, mean = 3, sd = 1))      # 평균이 3, 표준편차가 1인 정규분포에서 표본 4개 추출, N(3, 1^2)
r.2.mean[i] = mean( rnorm(4, mean = 170, sd = 6))    # 평균이 170, 표준편차가 6인 정규분포에서 표본 4개 추출, N(170, 6^2)
}
# 표본 평균들의 분포에서 평균과 표준편차를 구합니다
options(digit = 4)
c(mean(r.1.mean), sd(r.1.mean))
c(mean(r.2.mean), sd(r.2.mean))
# 예제 4-3. 임의의 분포에서 추출된 표본평균 x의 분포
set.seed(9)
t <- 10
p <- 0.1
x <- 0:10
n <- 1000
b.2.mean <- rep(NA, n)
b.4.mean <- rep(NA, n)
b.32.mean <- rep(NA, n)
b.64.mean <- rep(NA, n)
for (i in 1:n) {
b.2.mean[i]  <- mean(rbinom(2, size = t, prob = p))
b.4.mean[i]  <- mean(rbinom(4, size = t, prob = p))
b.32.mean[i] <- mean(rbinom(32, size = t, prob = p))
b.64.mean[i] <- mean(rbinom(64, size = t, prob = p))
}
c(mean(b.2.mean), sd(b.2.mean))
c(mean(b.4.mean), sd(b.4.mean))
c(mean(b.32.mean), sd(b.32.mean))
c(mean(b.64.mean), sd(b.64.mean))
# B(10, 0,1)의 분산과 표준편차
c(10*0.1*0.9, sqrt(10*0.1*0.9))    # 이항분포의 분산 = Var(X)= np(1-n)
# B(10, 0,1)의 분산과 표준편차
c(10*0.1*0.9, sqrt(10*0.1*0.9))    # 이항분포의 분산 = Var(X)= np(1-n)
sqrt(1000*0.1*0.9)
sqrt(10*0.1*0.9)
# B(10, 0,1)의 분산과 표준편차
c(10*0.1*0.9, sqrt(10*0.1*0.9))    # 이항분포의 분산 = Var(X)= np(1-n)
var(b.2.mean)
set.seed(9)
n <- 1000
n <- 1000 ; n
x <- seq(0,500,by=0.001)
mean.4   <- rep(NA, 1000)     # 결측치 생성
mean.16  <- rep(NA, 1000)
mean.32  <- rep(NA, 1000)
mean.256 <- rep(NA, 1000)
mean.4[i]   <- mean(rchisq(4,1))
mean.16[i]  <- mean(rchisq(16,1))
mean.32[i]  <- mean(rchisq(32,1))
mean.256[i] <- mean(rchisq(256,1))
for(i in 1:1000) {
mean.4[i]   <- mean(rchisq(4,1))
mean.16[i]  <- mean(rchisq(16,1))
mean.32[i]  <- mean(rchisq(32,1))
mean.256[i] <- mean(rchisq(256,1))
}
c(mean(mean.4), sd(mean.4))
c(mean(mean.16), sd(mean.16))
c(mean(mean.32), sd(mean.32))
c(mean(mean.256), sd(mean.256))
hist(chi.5.mean,prob=T,main="카이제곱분포 df=1, n= 4",
col="cyan")
x1 <- seq(min(m4),max(m4),length=1000)
y1 <- dnorm(x1, mean = 1, sd=2/sqrt(4))
lines(x1,y1,lty=2,lwd=2,col="blue")
y1 <- dnorm(x1, mean = 1, sd=sqrt(2)/sqrt(4))
hist(chi.5.mean,prob=T,main="카이제곱분포 df=1, n= 4",
col="cyan")
lines(x1,y1,lty=2,lwd=2,col="blue")
hist(chi.5.mean,prob=T,main="카이제곱분포 df=1, n= 4",
col="cyan")
hist(chi.5.mean,prob=T,main="카이제곱분포 df=1, n= 4",
col="cyan")
x1 <- seq(min(mean.4),max(mean.4),length=1000)
y1 <- dnorm(x1, mean = 1, sd=sqrt(2)/sqrt(4))
lines(x1,y1,lty=2,lwd=2,col="blue")
hist(mean.4,prob=T,main="카이제곱분포 df=1, n= 4",
col="cyan")
x1 <- seq(min(mean.4),max(mean.4),length=1000)
y1 <- dnorm(x1, mean = 1, sd=sqrt(2)/sqrt(4))
lines(x1,y1,lty=2,lwd=2,col="blue")
hist(mean.4,prob=T,main="카이제곱분포 df=1, n= 4",
col="cyan")
y1 <- dnorm(x1, mean = 1, sd=sqrt(10)/sqrt(4))
lines(x1,y1,lty=2,lwd=2, col="blue")
set.seed(9)
x <- seq(0,500,by=0.001)
mean.4   <- rep(NA, 1000)     # 결측치 생성
mean.16  <- rep(NA, 1000)
mean.32  <- rep(NA, 1000)
mean.256 <- rep(NA, 1000)
for(i in 1:1000) {
mean.4[i]   <- mean(rchisq(4,5))
mean.16[i]  <- mean(rchisq(16,5))
mean.32[i]  <- mean(rchisq(32,5))
mean.256[i] <- mean(rchisq(256,5))
}
c(mean(mean.4), sd(mean.4))
c(mean(mean.16), sd(mean.16))
c(mean(mean.32), sd(mean.32))
c(mean(mean.256), sd(mean.256))
hist(mean.4,prob=T,main="카이제곱분포 df=5, n= 4",
col="cyan")
x1 <- seq(min(mean.4),max(mean.4),length=1000)
y1 <- dnorm(x1, mean = 1, sd=sqrt(10)/sqrt(4))
lines(x1, y1, lty=2, lwd=2, col="blue")
c(mean(mean.4), sd(mean.4))
c(mean(mean.16), sd(mean.16))
c(mean(mean.32), sd(mean.32))
c(mean(mean.256), sd(mean.256))
hist(mean.4,prob=T,main="카이제곱분포 df=5, n= 4",
col="cyan")
lines(x1, y1, lty=2, lwd=2, col="blue")
hist(mean.4,prob=T,main="카이제곱분포 df=5, n= 4",
col="cyan")
x1 <- seq(min(mean.4),max(mean.4),length=1000)
y1 <- dnorm(x1, mean = 1, sd=sqrt(10)/sqrt(4))
hist(mean.4,prob=T,main="카이제곱분포 df=5, n= 4",
col="cyan")
