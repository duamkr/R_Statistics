ci <- c(1-alpha, ll, m, u)
ci.t(smp, 0.1)
ci.t <- function(x, alpha = 0.05) {
n <- length(smp)
m <- mean(x)
s <- sd(x)
t <- qt(1-(alpha/2), df = n-1)
ll <- m - t * (s/ sqrt(n))
ul <- m + t * (s/ sqrt(n))
ci <- c(1-alpha, ll, m, u)
names(ci) <- c("Confidence Level", "Lower limit", "Mean", "Upper limit")
return(ci)
}
smp <- c(520,498,481,512,515,542,520,518,527,526)
ci.t(smp)
ci.t(smp, 0.1)
# 예제 5-5, 모평균에 대한 95%신뢰구간(모분산을 모를 때)
ci.t <- function(x, alpha = 0.05) {
n <- length(smp)
m <- mean(x)
s <- sd(x)
t <- qt(1-(alpha/2), df = n-1)
ll <- m - t * (s/ sqrt(n))
ul <- m + t * (s/ sqrt(n))
ci <- c(1-alpha, ll, m, u)
names(ci) <- c("Confidence Level", "Lower limit", "Mean", "Upper limit")
return(ci)
}
smp <- c(520,498,481,512,515,542,520,518,527,526)
ci.t(smp)
# 예제 5-5, 모평균에 대한 95%신뢰구간(모분산을 모를 때)
ci.t <- function(x, alpha = 0.05) {
n <- length(smp)
m <- mean(x)
s <- sd(x)
t <- qt(1-(alpha/2), df = n-1)
ll <- m - t * (s/ sqrt(n))
ul <- m + t * (s/ sqrt(n))
ci <- c(1-alpha, ll, m, ul)
names(ci) <- c("Confidence Level", "Lower limit", "Mean", "Upper limit")
return(ci)
}
smp <- c(520,498,481,512,515,542,520,518,527,526)
ci.t(smp)
ci.t(smp, 0.1)
t
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
data3 <- mpg
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
data3 <- mpg
library(dplyr)
library(dplyr)
library(PairedData)
library(psych)
# 7장 여러 모집단의 평균 비교 검정
# 7-1. 모집단이 두개인 경우
# 정규성 테스트
# 기본 명령 shapiro.test()
library(dplyr)
data3 <- mpg
p3 <-data3 %>%
filter(class == 'midsize'| class = 'subcompact')
p3 <-data3 %>%
filter(class == midsize| class = subcompact)
p3 <-data3 %>%
filter(class == midsize | class = subcompact)
p3 <-data3 %>%
filter(class == 'midsize' | class = 'subcompact')
View(p4)
data3 <- mpg
p3 <-data3 %>%
filter(class == 'midsize' | class = 'subcompact')
View(p3)
p3 <-data3 %>%
filter(class == 'midsize' or class = 'subcompact')
p3 <-data3 %>%
filter(class == 'midsize' | class = 'subcompact')
p3 <-data3 %>%
filter(class == 'midsize' | class = 'subcompact')
View(data3)
p3 <-data3 %>%
select(hwy,class)%>%
filter(class == 'midsize' | class = 'subcompact')
p3 <-data3 %>%
select(hwy,class)
p3 <-mpg %>%
select(hwy,class)
p3 <-mpg %>%
select(hwy,class)
data3 <- mpg
p3 <-mpg %>%
select(hwy,class)
select(mpg,hwy,class)
library(dplyr)
select(mpg,hwy,class)
# 7장 여러 모집단의 평균 비교 검정
# 7-1. 모집단이 두개인 경우
# 정규성 테스트
# 기본 명령 shapiro.test()
library(dplyr)
# 7장 여러 모집단의 평균 비교 검정
# 7-1. 모집단이 두개인 경우
# 정규성 테스트
# 기본 명령 shapiro.test()
library(dplyr)
View(mpg)
p5<- mpg
p5 %>%
select(mpg, hwy, class) %>%
filter(class == 'midsize' | class = 'subcompact')
p5 %>%
select(hwy, class) %>%
filter(class == 'midsize' | class = 'subcompact')
p5 %>%
select(hwy, class)
p5<- mpg
p5 %>%
select(hwy, class)
p5 %>%
filter(class == 'midsize' | class = 'subcompact')
p5
p5 %>%
filter(class == 'midsize' | class = 'subcompact')
p5 %>%
filter(class == 'midsize')
filter(class%in% c('midsize','subcompact')
p5
p5 %>%
filter(class%in% c('midsize','subcompact'))
p5 %>%
filter(class%in% c('midsize','subcompact')) %>%
select(hwy, class)
p5 %>%
filter(class%in% c('midsize','subcompact')) %>%
select(p5,hwy, class)
p5 %>%
filter(class%in% c('midsize','subcompact')) %>%
var.test(data3$Price ~ data1$Origin)
p5 %>%
filter(class%in% c('midsize','subcompact'))
View(p5)
p6 <- p5 %>%
filter(class%in% c('midsize','subcompact'))
View(p6)
var.test(p6$hwy ~ p6$class)
t.test(p6$hwy ~ p6$class,mu=0, var.equal=FALSE )
t.test(p6$hwy ~ p6$class, mu=0, var.equal=FALSE)
ad <- read.csv('age.data.csv')
# Section 02. 모집단이 세 개 이상
setwd('D:/Workspace/R_Statistics/ch07')
ad <- read.csv('age.data.csv')
str(ad)
ad$score <- ifelse(ad$score == 99, NA, ad$score)
ad$scale <- factor(ad$scale)
ad$sex <- factor(ad$sex)
y1 <- ad$age(ad$scale == "1")
y1 <- ad$age[ad$scale == "1"]
y2 <- ad$age[ad$scale == "2"]
y3 <- ad$age[ad$scale == "3"]
y1.mean <- mean(y1)
y1.mean <- mean(y1)
y2.mean <- mean(y2)
y3.mean <- mean(y3)
see.1 <- sum( (y1 - y1.mean)^2)
see.3 <- sum( (y3 - y3.mean)^2)
see.2 <- sum( (y2 - y2.mean)^2)
sse <- sse.1 + sse.2 + sse.3
sse.1 <- sum( (y1 - y1.mean)^2)
sse.2 <- sum( (y2 - y2.mean)^2)
sse.3 <- sum( (y3 - y3.mean)^2)
sse <- sse.1 + sse.2 + sse.3
dfe <- (length(y1)-1) + (length(y2)-1) + (length(y3)-1)
df
y.mean <- mean(ad$age)
sst.1 <- length(y1) * sum((y1.mean - y.mean)^2)
sst.2 <- length(y2) * sum((y2.mean - y.mean)^2)
sst.3 <- length(y3) * sum((y3.mean - y.mean)^2)
sst <- sst.1 + sst.2+ sst.3
dft <- length(levels(ad$scale))
mst <- sst / dft
mse <- sse / dfe
f.t <- mst / mse
f.t
sse
dft <- length(levels(ad$scale)) -1
mst <- sst / dft
mse <- sse / dfe
f.t <- mst / mse
f.t
mse
mst
alpha <- 0.05
tol - qf(1-alpha, 2, 147)
tol <- qf(1-alpha, 2, 147)
tol
(p.value <- 1-pf(f.t,2,147))
ow <- lm(age ~ scale, data=ad)
anova(ow)
oneway.test(age~scale, data=ad, var.equal = TRUE)
x <- c(315,101,108,32)
chisq.test(x, p=c(9,3,3,1) /16)
par(mar=c(0,1,1,1))
par
x <- seq(0, 15, by=0.01)
dc <- dchisq(x, df=3)
alpha <- 0.05
tol <- qchisq(0.95, df=3)
par(mar=c(0,1,1,1))
plot(x, dc, type="l", axes=F, ylim=c(-0.03, 0.25), xlab="", ylab="")
abline(h=0)
tol.g <- round(tol, 2)
polygon(c(tol.g, x[x>tol.g], 15), c(0, dc[x>tol.g], 0), col="red")
text(0, -0.03, "0", cex=0.8)
text(tol, -0.03, expression(chi[0.05]^{2}==2.14), cex=0.8)
par(mar=c(0,1,1,1))
plot(x, dc, type="l", axes=F, ylim=c(-0.03, 0.25), xlab="", ylab="")
abline(h=0)
tol.g <- round(tol, 2)
polygon(c(tol.g, x[x>tol.g], 15), c(0, dc[x>tol.g], 0), col="red")
text(0, -0.03, "0", cex=0.8)
text(tol, -0.03, expression(chi[0.05]^{2}==2.14), cex=0.8)
polygon(chisq.test(x, p=c(9,3,3,1) /16))
p1<-chisq.test(x, p=c(9,3,3,1) /16)
chisq.test(x, p=c(9,3,3,1) /16)
chisq.test(x, p=c(9,3,3,1) /16)
# 멘델의 유전법칙 R을 이용하여 구하기(chisq.test())
x <- c(315,101,108,32)
chisq.test(x, p=c(9,3,3,1) /16)
polygon(c(tol.g, x[x>tol.g]), c(0, dc[x>tol.g], 0), col="red")
polygon(0.9254, x[x>tol.g], 15), c(0, dc[x>tol.g], 0), col="red")
polygon(0.9254, destiny= 10 , angle=135)
polygon(0.9254, destiny = 10 , angle = 135)
polygon(0.9254, densty = 10 , angle = 135)
polygon(0.9254, density = 10 , angle = 135)
polygon(0.9254,1, density = 10 , angle = 135)
polygon(0.9254,1, density = 10 , angle = 135)
# 멘델의 유전법칙 R을 이용하여 구하기(chisq.test())
x <- c(315,101,108,32)
chisq.test(x, p=c(9,3,3,1) /16)
par(mar=c(0,1,1,1))
plot(x, dc, type="l", axes=F, ylim=c(-0.03, 0.25), xlab="", ylab="")
abline(h=0)
tol.g <- round(tol, 2)
polygon(c(tol.g, x[x>tol.g], 15), c(0, dc[x>tol.g], 0), col="red")
x <- seq(0, 15, by=0.01)
dc <- dchisq(x, df=3)
alpha <- 0.05
tol <- qchisq(0.95, df=3)
par(mar=c(0,1,1,1))
plot(x, dc, type="l", axes=F, ylim=c(-0.03, 0.25), xlab="", ylab="")
abline(h=0)
tol.g <- round(tol, 2)
polygon(c(tol.g, x[x>tol.g], 15), c(0, dc[x>tol.g], 0), col="red")
text(0, -0.03, "0", cex=0.8)
text(tol, -0.03, expression(chi[0.05]^{2}==2.14), cex=0.8)
polygon(0.9254,1, density = 10 , angle = 135)
polygon(x,1, density = 10 , angle = 135)
polygon(x,dc, density = 10 , angle = 135)
polygon(0.9254,dc, density = 10 , angle = 135)
polygon(tol,dc, density = 10 , angle = 135)
polygon(xl,dc, density = 10 , angle = 135)
x <- seq(0, 15, by=0.01)
x
dc
tol
tol.g
chisq.test(x, p=c(9,3,3,1) /16)
# 멘델의 유전법칙 R을 이용하여 구하기(chisq.test())
x <- c(315,101,108,32)
chisq.test(x, p=c(9,3,3,1) /16)
x <- seq(0, 15, by=0.01)
dc <- dchisq(x, df=3)
alpha <- 0.05
tol <- qchisq(0.95, df=3)
par(mar=c(0,1,1,1))
plot(x, dc, type="l", axes=F, ylim=c(-0.03, 0.25), xlab="", ylab="")
abline(h=0)
tol.g <- round(tol, 2)
polygon(c(tol.g, x[x>tol.g], 15), c(0, dc[x>tol.g], 0), col="red")
text(0, -0.03, "0", cex=0.8)
text(tol, -0.03, expression(chi[0.05]^{2}==2.14), cex=0.8)
polygon(xl,dc, density = 10 , angle = 135)
polygon(1,dc, density = 10 , angle = 135)
polygon(0.9254,dc, density = 10 , angle = 135)
polygon(c(0.9254),dc, density = 10 , angle = 135)
sns.c <- read.csv('snsbyage.csv')
sns.c <- read.csv('snsbyage.csv',header = T, stringsAsFactors = FALSE)
str(sns.c)
sns.c <- transform(sns.c, service.c =
factor(service, levels=c("F", "T", "K", "C", "E"),
ordered=TRUE))
sns.c <- transform(sns.c, service.c =
factor(service, levels=c("F", "T", "K", "C", "E"),
ordered=TRUE))
sns.c <- transform(sns.c, age.c =
factor(age, levels=c(1, 2, 3),
labels=c("20대", "30대", "40대")))
sns.c <- transform(sns.c, service.c =
factor(service, levels=c("F", "T", "K", "C", "E"),
ordered=TRUE))
c.tab <- table(sns.c$age.c, sns.c$service.c)
c.tab
c.tab <- table(sns.c$age.c, sns.c$service.c)
(a.n <- margin.table(c.tab, margin=1))
(s.n <- margin.table(c.tab, margin=2))
(s.p <- s.n / margin.table(c.tab))
(expected <- a.n %*% t(s.p))
(o.e <- c.tab-expected)
(t.t <- sum(  (o.e)^2 / expected ))
qchisq(0.95, df=9)
qchisq(0.95, df=8)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
1-pchisq(t.t, df=8)
qchisq(0.95, df=8)
1-pchisq(t.t, df=8)
# R에서 구하기
chisq.test(c.tab)
addmargins(chisq.test(c.tab)$expected)
# R에서 구하기
chisq.test(c.tab)
addmargins(chisq.test(c.tab)$expected)
reuslut <- chisq.test(c.tab)
names(result)
reusult <- chisq.test(c.tab)
names(result)
result <- chisq.test(c.tab)
names(result)
result$expected
str(result)
result$p.value
result <- chisq.test(c.tab)
names(result)
result$expected
str(result)
result$p.value
addmargins(chisq.test(c.tab)$expected)
# 예제-3. 성별에 따른 대학원 입학 여부의 독립성 검정
data(UCBAdmissions)
ucba.tab <- apply(UCBAdmissions, c(1,2, sum))
ucba.tab
ucba.tab <- apply(UCBAdmissions, c(1,2), sum))     # c(1,2) 열과 행으로 더해서 sum으로 저장해라
ucba.tab <- apply(UCBAdmissions, c(1,2), sum)     # c(1,2) 열과 행으로 더해서 sum으로 저장해라
ucba.tab
round(prop.table(ucba.tap. margin = 2) * 100, 1)
round(prop.table(ucba.tab, margin=2) * 100, 1)
(a.n <- margin.table(ucba.tab, margin=1))
(g.n <- margin.table(ucba.tab, margin=2))
(a.p <- a.n / margin.table(ucba.tab))
(g.p <- g.n / margin.table(ucba.tab))
(expected <- margin.table(ucba.tab) * (a.p %*% t(g.p)))
addmargins( expected )
o.e <- (ucba.tab - expected)^2 / expected
addmargins(o.e)
chisq.t <- sum(o.e)
chisq.t
qchisq(0.95, df=1)
1-pchisq(112.250, df=1)
1-pchisq(chisq.t, df=1)
chisq.test(ucba.tab)
library(dplyr)
library(psych)
library(PairedData)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(PairedData)
library(psych)
p5<- mpg
p6 <- p5 %>%
filter(class%in% c('midsize','subcompact'))
var.test(p6$hwy ~ p6$class)
t.test(p6$hwy ~ p6$class, mu=0, var.equal=FALSE)
View(p5)
p7 <- p5 %>%
filter(class == 'subcompact', drv %in% c('f','l'))
View(p7)
View(p7)
p7 <- p5 %>%
filter(class == 'subcompact', drv %in% c('f','r'))
View(p7)
var.test(p7$cwy ~ p7$drv)
var.test(p7$cty ~ p7$drv)
t.test(p7$cty ~ p7$drv, mu=0, var.equal=FALSE)
p8 <- p5 %>%
filter(fl %in% c('r','p'))
View(p8)
var.test(p8$cty ~ p8$fl)
t.test(p8$cty ~ p8$fl, mu=0, var.equal=FALSE)
a <- c(51.4,52.0,45.5,54.5,52.3,50.9,52.7,50.3,53.8,53.1)
b <- c(50.1,51.5,45.9,53.1,51.8,50.3,52.0,49.9,52.5,53)
Xi <- c(51.4,52.0,45.5,54.5,52.3,50.9,52.7,50.3,53.8,53.1)
Yi <- c(50.1,51.5,45.9,53.1,51.8,50.3,52.0,49.9,52.5,53.0)
data.frame(Xi,Yi)
pst <-data.frame(Xi,Yi)
pst
View(pst)
Zi <- c(1.3,0.5,-0.4,1.4,0.5,0.6,0.7,0.4,1.3,1)
result <- c(1.3,0.5,-0.4,1.4,0.5,0.6,0.7,0.4,1.3,1)
pst <-data.frame(Xi,Yi,result)
View(pst)
t.test(pst$Xi, pst$Yi, paired = T)
t.test(pst$Xi, pst$Yi, paired = T)
t.test(pst$Xi, pst$Yi, paired = T, alternative = 'less')
sd <-data.frame(S1,S2)
S1 <- c(13.2,8.2,10.9,14.3,10.7,6.6,9.5,10.8,8.8,13.3)
S2 <- c(14.0,8.8,11.2,14.2,11.8,6.4,9.8,11.3,9.3,13.6)
sd <-data.frame(S1,S2)
View(sd)
t.test(pst$Xi, pst$Yi, paired = T)
t.test(pst$Xi, pst$Yi, paired = T)
t.test(pst$Xi, pst$Yi, paired = T, alternative = 'less')
t.test(pst$Xi, pst$Yi, paired = T)
t.test(pst$Xi, pst$Yi, paired = T, alternative = 'greater')
t.test(sd$S1, sd$S2, paired = T)
h1 <- c(5, 7, 6, 8, 6, 7, 8, 8, 6, 10)
h2 <- c(6, 8, 9, 11, 13, 12, 10, 8, 9, 10)
h3 <- c(14, 25, 26, 18, 19, 22, 21, 16, 20, 30)
ht <- data.frame(h1,h2,h3)
View(ht)
hs <- lm(h1 ~ h2, data=ht)
anova(hs)
ht <- C(h1,h2,h3)
ht <- c(h1,h2,h3)
View(ht)
ht
n <- rep(10, 3)
n
group <- rep(1:3, n)
group
group.t <- data.frame(ht,group)
group.t
group.t
View(group.t)
total <- lm(ht ~ group, data=group.t)
anova(total)
total <- lm(ht ~ group, data=group.t)
anova(total)
q1 <- c(15.5, 14.3, 16.3, 13.5, 15.7, 16.4, 14.7)
q2 <- c(14.7, 16.3, 15.5, 15.2, 16.3, 13.5, 15.4)
q3 <- c(15.5, 13.2, 16.5, 15.7, 15.3, 15.2, 14.8)
qt <- c(q1,q2,q3)
n <- rep(7, 3)
n
group <- rep(1:3, n)
group
total <- lm(qt ~ group, data=group.t)
anova(total)
group <- rep(1:3, n)
group
group.t <- data.frame(ht,group)
group.t <- data.frame(qt,group)
total <- lm(qt ~ group, data=group.t)
anova(total)
View(p7)
p7 <- p5 %>%
filter(class == 'subcompact', drv %in% c('f','r'))
var.test(p7$cty ~ p7$drv)
t.test(p7$cty ~ p7$drv, mu=0, var.equal=FALSE)
80 * 0.15
name <- c('철수','영희','길동')
age <- c(21, 20, 31)
gender <- factor(c('M','F','M'))
person <- data.frame(name,age,gender)
person
# 2) 다음과 같이 네명의 학생이 중간 시험과 기말 시험을 봤다.
# 2-1) 위 자료를 데이터 프레임으로 만들어 df_score 라는 변수에 할당하시오.
이름 <- c('강경학', '김태균', '이성열', '정은원') ; 이름
중간 <- c(90, 78, 94, 70)
기말 <- c(50, 60, 90, 92)
df_score <- data.frame(이름, 중간, 기말)
df_score
n <- c('강경학', '김태균', '이성열', '정은원') ; 이름
m <- c(90, 78, 94, 70)
h <- c(50, 60, 90, 92)
df_score1 <- data.frame(이름=n, 중간=m, 기말=h)
df_score1
1갑이상 <- c(23,31,13,67)
h1 <- c(23,31,13,67)
h2 <- c(21,48,23,92)
sum1 <- c(107,238,155,500)
t1 <- data.frame(h1,h2,h3,sum1)
t1
h1 <- c(23,31,13,67)
h2 <- c(21,48,23,92)
h3 <- c(63,159,119,341)
sum1 <- c(107,238,155,500)
t1 <- data.frame(h1,h2,h3,sum1)
t1
View(t1)
rownames(t1)= c("반병이상","반병이하","못마심","계계)
rownames(t1)= c("반병이상","반병이하","못마심","계")
t1
View(t1)
# 검정통계량으로 구하기
sns.c <- transform(sns.c, age.c =
factor(age, levels=c(1, 2, 3),
labels=c("20대", "30대", "40대")))
sns.c <- transform(sns.c, service.c =
factor(service, levels=c("F", "T", "K", "C", "E"),
ordered=TRUE))
c.tab
h1 <- c(23,31,13)
h2 <- c(21,48,23)
h3 <- c(63,159,119)
t1 <- data.frame(h1,h2,h3)
t1
View(t1)
chisq.test(t1)
bul <- c(16,64)
chisq.test(bul,p=c(0.15,0.85))
# p-value > 0.05 이므로 영가설 채택, 즉 두 집단의 분산은 서로 같다. <br>
